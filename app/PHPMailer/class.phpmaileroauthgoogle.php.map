{"version":3,"names":[],"mappings":"","sources":["PHPMailer/class.phpmaileroauthgoogle.php"],"sourcesContent":["<?php\n/**\n * PHPMailer - PHP email creation and transport class.\n * PHP Version 5.4\n * @package PHPMailer\n * @link https://github.com/PHPMailer/PHPMailer/ The PHPMailer GitHub project\n * @author Marcus Bointon (Synchro/coolbru) <phpmailer@synchromedia.co.uk>\n * @author Jim Jagielski (jimjag) <jimjag@gmail.com>\n * @author Andy Prevost (codeworxtech) <codeworxtech@users.sourceforge.net>\n * @author Brent R. Matzelle (original founder)\n * @copyright 2012 - 2014 Marcus Bointon\n * @copyright 2010 - 2012 Jim Jagielski\n * @copyright 2004 - 2009 Andy Prevost\n * @license http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License\n * @note This program is distributed in the hope that it will be useful - WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.\n */\n\n/**\n * PHPMailerOAuthGoogle - Wrapper for League OAuth2 Google provider.\n * @package PHPMailer\n * @author @sherryl4george\n * @author Marcus Bointon (@Synchro) <phpmailer@synchromedia.co.uk>\n * @link https://github.com/thephpleague/oauth2-client\n */\nclass PHPMailerOAuthGoogle\n{\n    private $oauthUserEmail = '';\n    private $oauthRefreshToken = '';\n    private $oauthClientId = '';\n    private $oauthClientSecret = '';\n\n    /**\n     * @param string $UserEmail\n     * @param string $ClientSecret\n     * @param string $ClientId\n     * @param string $RefreshToken\n     */\n    public function __construct(\n        $UserEmail,\n        $ClientSecret,\n        $ClientId,\n        $RefreshToken\n    ) {\n        $this->oauthClientId = $ClientId;\n        $this->oauthClientSecret = $ClientSecret;\n        $this->oauthRefreshToken = $RefreshToken;\n        $this->oauthUserEmail = $UserEmail;\n    }\n\n    private function getProvider()\n    {\n        return new League\\OAuth2\\Client\\Provider\\Google([\n            'clientId' => $this->oauthClientId,\n            'clientSecret' => $this->oauthClientSecret\n        ]);\n    }\n\n    private function getGrant()\n    {\n        return new \\League\\OAuth2\\Client\\Grant\\RefreshToken();\n    }\n\n    private function getToken()\n    {\n        $provider = $this->getProvider();\n        $grant = $this->getGrant();\n        return $provider->getAccessToken($grant, ['refresh_token' => $this->oauthRefreshToken]);\n    }\n\n    public function getOauth64()\n    {\n        $token = $this->getToken();\n        return base64_encode(\"user=\" . $this->oauthUserEmail . \"\\001auth=Bearer \" . $token . \"\\001\\001\");\n    }\n}\n"],"file":"class.phpmaileroauthgoogle.php"}